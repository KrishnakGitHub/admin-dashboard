[{"/home/ubuntu/workspace/dashboard/admin-dashboard/src/index.js":"1","/home/ubuntu/workspace/dashboard/admin-dashboard/src/App.js":"2","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/LoginPage.js":"3","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectDetailsPage.js":"4","/home/ubuntu/workspace/dashboard/admin-dashboard/src/utils/PrivateRoute.js":"5","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/HomePage.js":"6","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/DashboardPage.js":"7","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectPage.js":"8","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ClientDetailsPage.js":"9","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/RegisterPage.js":"10","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/NewProjectPage.js":"11","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ManagerClientPage.js":"12","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/Sidebar.js":"13","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/AuthContext.js":"14","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/DashboardGraph.js":"15","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/DashboardContext.js":"16","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/AddClient.js":"17","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/ProjectForm.js":"18"},{"size":251,"mtime":1668883541798,"results":"19","hashOfConfig":"20"},{"size":1950,"mtime":1668803930688,"results":"21","hashOfConfig":"20"},{"size":2141,"mtime":1668796142719,"results":"22","hashOfConfig":"20"},{"size":677,"mtime":1668626294706,"results":"23","hashOfConfig":"20"},{"size":355,"mtime":1668716118604,"results":"24","hashOfConfig":"20"},{"size":1203,"mtime":1668626294706,"results":"25","hashOfConfig":"20"},{"size":2331,"mtime":1668971830711,"results":"26","hashOfConfig":"20"},{"size":2265,"mtime":1668963300509,"results":"27","hashOfConfig":"20"},{"size":2087,"mtime":1668934021881,"results":"28","hashOfConfig":"20"},{"size":1849,"mtime":1668794186061,"results":"29","hashOfConfig":"20"},{"size":135,"mtime":1668626294706,"results":"30","hashOfConfig":"20"},{"size":144,"mtime":1668626294706,"results":"31","hashOfConfig":"20"},{"size":2524,"mtime":1668795399445,"results":"32","hashOfConfig":"20"},{"size":4352,"mtime":1668885920458,"results":"33","hashOfConfig":"20"},{"size":2924,"mtime":1668971839011,"results":"34","hashOfConfig":"20"},{"size":935,"mtime":1668802425742,"results":"35","hashOfConfig":"20"},{"size":3226,"mtime":1668892946823,"results":"36","hashOfConfig":"20"},{"size":8622,"mtime":1668960885746,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"14ml5u0",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"/home/ubuntu/workspace/dashboard/admin-dashboard/src/index.js",[],["80","81"],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/App.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/LoginPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectDetailsPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/utils/PrivateRoute.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/HomePage.js",["82"],"import React, {useState, useEffect, useContext} from 'react';\nimport AuthContext from '../context/AuthContext';\n\nconst domain = 'https://dr-admin-dashboard.herokuapp.com'\n// const domain = 'https://8000-autumn-night-66818328.eu-ws4.runcode.io';\n\nconst HomePage = () => {\n    let [notes, setNotes] = useState([])\n    let {authTokens, logoutUser} = useContext(AuthContext)\n\n    useEffect(()=> {\n        getNotes()\n    }, [])\n\n\n    let getNotes = async() =>{\n        let response = await fetch(`${domain}/api/notes/`, {\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + String(authTokens.access)\n            }\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setNotes(data)\n        }else if(response.statusText === 'Unauthorized'){\n            logoutUser()\n        }\n        \n    }\n\n    return (\n        <div>\n            <p>You are logged to the home page!</p>\n\n\n            <ul>\n                {notes.map(note => (\n                    <li key={note.id} >{note.body}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default HomePage\n","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/DashboardPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ClientDetailsPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/RegisterPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/NewProjectPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ManagerClientPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/Sidebar.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/AuthContext.js",["83"],"import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom'\n\n\nconst domain = 'https://dr-admin-dashboard.herokuapp.com';\n// const domain = 'https://8000-autumn-night-66818328.eu-ws2.runcode.io';\n\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({children}) => {\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    let [loading, setLoading] = useState(true)\n\n    const history = useHistory()\n\n    let RegisterUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`${domain}/api/register/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'email':e.target.email.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            // setAuthTokens(data)\n            // setUser(jwt_decode(data.access))\n            // localStorage.setItem('authTokens', JSON.stringify(data))\n            alert(data.message)\n            history.push('/')\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n    let loginUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`${domain}/api/token/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/')\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n    let addClient = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`${domain}/api/create-client/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'client_name':e.target.client_name.value, 'client_company':e.target.client_company.value, 'client_phone':e.target.client_phone.value, 'client_email':e.target.client_email.value})\n        })\n        let data = await response.json()\n    \n        if(response.status === 200){\n            alert(data.message)\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n\n    let logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\n\n    let updateToken = async ()=> {\n\n        let response = await fetch(`${domain}/api/token/refresh/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'refresh':authTokens?.refresh})\n        })\n\n        let data = await response.json()\n        \n        if (response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else{\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        RegisterUser:RegisterUser,\n        logoutUser:logoutUser,\n        addClient:addClient\n    }\n\n\n    useEffect(()=> {\n\n        if(loading){\n            updateToken()\n        }\n\n        let fourMinutes = 1000 * 60 * 4\n\n        let interval =  setInterval(()=> {\n            if(authTokens){\n                updateToken()\n            }\n        }, fourMinutes)\n        return ()=> clearInterval(interval)\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/DashboardGraph.js",["84","85","86","87"],"import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Sector, Cell } from 'recharts';\n\nconst data = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst DashboardGraph = () =>{\n  let [graphdata, setGraphdata] = useState([]);\n  let [clientcount, setClientcount] = useState([]);\n  let [projectcount, setProjectcount] = useState([]);\n  useEffect(() => {\n    getGraphdata();\n  }, [])\n  let getGraphdata = async () => {\n    let response = await fetch('/api/counts/', {\n      headers:{\n        'Content-Type':'application/json',\n        'Authorization':'Bearer '+JSON.parse(localStorage.getItem('authTokens')).access+'',\n    },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      setGraphdata(data);\n      setProjectcount(\n        [\n          { name: 'Completed', value: data.completed_projects_count },\n          { name: 'On Process', value: data.ongoing_projects_count },\n          { name: 'Pending', value: data.pending_projects_count },\n        ]\n      )\n      console.log(data)\n    }\n    else{\n      alert('Something went wrong!');\n    }\n  }\n  return (<div className='row'>\n    <div className=\"col m-3 p-2 bg-white rounded\">\n      <span>Clients</span>\n      <PieChart width={200} height={200}>\n        <Pie\n          data={projectcount}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n    </PieChart>\n  </div>\n\n    <div className=\"col m-3 p-2 bg-white rounded\">\n      <span>Projects</span>\n      <PieChart width={200} height={200}>\n        <Pie\n          data={projectcount}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n    </PieChart>\n  </div>\n  </div>)\n}\nexport default DashboardGraph","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/DashboardContext.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/AddClient.js",["88"],"import React, {useContext} from 'react';\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\n\n// const domain = 'https://dr-admin-dashboard.herokuapp.com';\nconst domain = 'https://8000-autumn-night-66818328.eu-ws2.runcode.io';\n\nclass AddClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.AddClient = this.AddClient.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  AddClient  = async (e )=> {\n    console.log('Click happened');\n    e.preventDefault()\n    let response = await fetch(`${domain}/api/create-client/`, {\n        method:'POST',\n        headers:{\n            'Content-Type':'application/json'\n        },\n        body:JSON.stringify({'client_name':e.target.client_name.value, 'client_company':e.target.client_company.value, 'client_phone':e.target.client_phone.value, 'client_email':e.target.client_email.value})\n    })\n    let data = await response.json()\n    if(response.status === 200){\n        alert(data.message)\n    }else{\n        alert('Something went wrong!')\n    }\n  };\n  \n\n  render() {\n    return (\n      <div>\n        <Button color=\"primary\" onClick={this.toggle}>+ ADD NEW CLIENT</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className='modal-dialog modal-dialog-centered'>\n          <ModalBody>\n            <h3 className='text-center m-4'>Add Client</h3>\n            <form onSubmit={this.AddClient}>\n                <div class=\"mb-3\">\n                    <label for=\"id_client_name\" class=\"form-label\">Client Name</label>\n                    <input type=\"text\" class=\"form-control\" name='client_name' id=\"id_client_name\" placeholder=\"Client Name\"/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"id_client_company\" class=\"form-label\">Client Company</label>\n                    <input type=\"text\" class=\"form-control\" name='client_company' id=\"id_client_company\" placeholder=\"Company Name\"/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"id_client_phone\" class=\"form-label\">Client Phone</label>\n                    <input type=\"tel\" class=\"form-control\" name='client_phone' id=\"id_client_phone\" placeholder=\"1234567890\" pattern=\"[0-9]{10}\"/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"id_client_email\" class=\"form-label\">Client Email</label>\n                    <input type=\"email\" class=\"form-control\" name='client_email' id=\"id_client_email\" placeholder=\"name@example.com\"/>\n                </div>\n                <div class=\"mb-3\">\n                    {/* <input type=\"submit\" name='Add' value='Add'/> */}\n                    {/* <Button color=\"primary\" type=\"submit\">Add</Button>{' '} */}\n                    <ModalFooter>\n                        <Button color=\"primary\" type=\"submit\">Add</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </div>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default AddClient;","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/ProjectForm.js",["89"],"import React from 'react';\nimport { Button, Input, Modal, ModalBody, ModalFooter } from 'reactstrap';\n\n\nclass ProjectForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      clients:[],\n      isLoaded: false,\n    };\n\n    this.getClient = this.getClient.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  createProject  = async (e)=> {\n    e.preventDefault()\n    let response = await fetch('/api/create-project/', {\n      method:'POST',\n      headers:{\n          'Content-Type':'application/json',\n          'Authorization':'Bearer '+JSON.parse(localStorage.getItem('authTokens')).access+'',\n      },\n      body:JSON.stringify({\n        'project_id':e.target.project_id.value,\n        'project_title':e.target.project_title.value,\n        'department':e.target.department.value,\n        'project_priority':e.target.project_priority.value,\n        'client':e.target.client.value,\n        'date_from':e.target.date_from.value,\n        'date_to':e.target.date_to.value,\n        'work_status':e.target.work_status.value,\n      })\n  })\n    let data = await response.json()\n    if(response.status === 200){\n        alert(data.message)\n        this.setState({\n          modal: false\n        });\n    }else{\n        alert(data.message)\n    }\n  };\n\n  getClient  = async ()=> {\n    let response = await fetch('/api/clients/', {\n        method:'GET',\n        headers:{\n          'Content-Type':'application/json',\n          'Authorization':'Bearer '+JSON.parse(localStorage.getItem('authTokens')).access+'',\n      },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      this.setState({\n        isLoaded: true,\n        clients: data.clients\n      });\n      console.log(this.state.clients)\n    }else{\n        alert(data.detail)\n    }\n  };\n  \n\n  render() {\n    return (\n      <div>\n        <Button color=\"primary\" onClick={this.toggle}>+ CREATE NEW PROJECT</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className='modal-dialog modal-dialog-centered modal-lg'>\n          <ModalBody>\n            <h3 className='text-center m-4'>Add Client</h3>\n            <form onSubmit={this.createProject}>\n                <div class=\"mb-3\">\n                  <div className='row'>\n                    <div className='col'>\n                      <label for=\"id_project_id\" class=\"form-label\">Project Id</label>\n                      <input type=\"tel\" class=\"form-control\" name='project_id' id=\"id_project_id\" pattern=\"[0-9]{6}\" placeholder=\"Project Id\"/>\n                    </div>\n                    <div className='col'>\n                      <label for=\"id_project_title\" class=\"form-label\">Project Title</label>\n                      <input type=\"text\" class=\"form-control\" name='project_title' id=\"id_project_title\" placeholder=\"Project Title\"/>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-3\">\n                  <div className='row'>\n                    <div className='col'>\n                      <label for=\"id_project_priority\" class=\"form-label\">Project Title</label>\n                      <select class=\"form-select\" name='department' aria-label=\"Default select example\">\n                        <option selected>Select Department</option>\n                        <option value=\"DD\">Development Department</option>\n                        <option value=\"MD\">Managers Department</option>\n                        <option value=\"APPD\">Application Department</option>\n                        <option value=\"ACCD\">Accounts Department</option>\n                      </select>\n                    </div>\n                    <div className='col'>\n                      <label for=\"id_project_priority\" class=\"form-label\">Project Title</label>\n                      <select class=\"form-select\" name='project_priority' aria-label=\"Default select example\">\n                        <option selected>Select Priority</option>\n                        <option value=\"L\">Low</option>\n                        <option value=\"M\">Medium</option>\n                        <option value=\"H\">High</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-3\">\n                  <div className='row'>\n                    <div className='col'>\n                      <label for=\"id_project_priority\" class=\"form-label\">Project Title</label>\n                      <select class=\"form-select\" onClick={this.getClient} name='client' aria-label=\"Default select example\">\n                        <option selected>Select Client</option>\n                        {this.state.clients.map((client, index) => {\n                        return (\n                          <option key={index} value={client.id}>\n                              {client.client_name}\n                          </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                    <div className='col'></div>\n                  </div>\n                </div>\n                <div class=\"mb-3\">\n                <div className='row'>\n                    <div className='col'>\n                      <label for=\"id_date_from\" class=\"form-label\">Date From</label>\n                      <input type=\"date\" class=\"form-control\" name='date_from' id=\"id_date_from\" placeholder=\"DD-MM-YYYY\"/>\n                    </div>\n                    <div className='col'>\n                      <label for=\"id_date_to\" class=\"form-label\">Date To</label>\n                      <input type=\"date\" class=\"form-control\" name='date_to' id=\"id_date_to\" placeholder=\"DD-MM-YYYY\"/>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mb-3 d-flex\">\n                <label for=\"id_client_email\" class=\"form-label mx-2\">Work Status</label>\n                <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"work_status\" id=\"exampleRadios1\" value=\"option1\"/>\n                      <label class=\"form-check-label\" for=\"exampleRadios1\">\n                        Completed\n                      </label>\n                    </div>\n                    <div class=\"form-check mx-2\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"work_status\" id=\"exampleRadios2\" value=\"option2\"/>\n                      <label class=\"form-check-label\" for=\"exampleRadios2\">\n                        Pending\n                      </label>\n                    </div>\n                    <div class=\"form-check mx-2\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"work_status\" id=\"exampleRadios1\" value=\"option3\"/>\n                      <label class=\"form-check-label\" for=\"exampleRadios3\">\n                        On Progress\n                      </label>\n                    </div>\n                    {/* h */}\n                    {/* <label for=\"id_client_email\" class=\"form-label mx-2\">Work Status</label>\n                    <div class=\"form-check mx-2\">\n                      <input class=\"form-check-input\" type=\"radio\"  name=\"C\" id=\"id_C\"/>\n                      <label class=\"form-check-label\" for=\"id_C\">\n                        Completed\n                      </label>\n                    </div>\n                    <div class=\"form-check mx-2\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"P\" id=\"id_P\"/>\n                      <label class=\"form-check-label\" for=\"id_P\">\n                        Pending\n                      </label>\n                    </div>\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"radio\" name=\"O\" id=\"id_O\"/>\n                      <label class=\"form-check-label\" for=\"id_O\">\n                        On Progress\n                      </label>\n                    </div> */}\n                </div>\n                <div class=\"mb-3\">\n                    {/* <input type=\"submit\" name='Add' value='Add'/> */}\n                    {/* <Button color=\"primary\" type=\"submit\">Add</Button>{' '} */}\n                    <ModalFooter>\n                        <Button color=\"primary\" type=\"submit\">Add</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </div>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default ProjectForm;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":13,"column":8,"nodeType":"96","endLine":13,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":142,"column":8,"nodeType":"96","endLine":142,"endColumn":29,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":34,"nodeType":"102","messageId":"103","endLine":2,"endColumn":40},{"ruleId":"100","severity":1,"message":"104","line":27,"column":8,"nodeType":"102","messageId":"103","endLine":27,"endColumn":17},{"ruleId":"100","severity":1,"message":"105","line":28,"column":8,"nodeType":"102","messageId":"103","endLine":28,"endColumn":19},{"ruleId":"100","severity":1,"message":"106","line":28,"column":21,"nodeType":"102","messageId":"103","endLine":28,"endColumn":35},{"ruleId":"100","severity":1,"message":"107","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"108","line":2,"column":18,"nodeType":"102","messageId":"103","endLine":2,"endColumn":23},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["112"],"no-unused-vars","'Sector' is defined but never used.","Identifier","unusedVar","'graphdata' is assigned a value but never used.","'clientcount' is assigned a value but never used.","'setClientcount' is assigned a value but never used.","'useContext' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [getNotes]",{"range":"117","text":"118"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"119","text":"120"},[419,421],"[getNotes]",[4184,4205],"[authTokens, loading, updateToken]"]