[{"/home/ubuntu/workspace/dashboard/admin-dashboard/src/index.js":"1","/home/ubuntu/workspace/dashboard/admin-dashboard/src/App.js":"2","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/LoginPage.js":"3","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectDetailsPage.js":"4","/home/ubuntu/workspace/dashboard/admin-dashboard/src/utils/PrivateRoute.js":"5","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/HomePage.js":"6","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/DashboardPage.js":"7","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectPage.js":"8","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ClientDetailsPage.js":"9","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/RegisterPage.js":"10","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/NewProjectPage.js":"11","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ManagerClientPage.js":"12","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/Sidebar.js":"13","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/AuthContext.js":"14","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/DashboardGraph.js":"15","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/DashboardContext.js":"16","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/AddClient.js":"17","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/ProjectForm.js":"18"},{"size":251,"mtime":1668883541798,"results":"19","hashOfConfig":"20"},{"size":1950,"mtime":1668803930688,"results":"21","hashOfConfig":"20"},{"size":2141,"mtime":1668796142719,"results":"22","hashOfConfig":"20"},{"size":1653,"mtime":1668978857613,"results":"23","hashOfConfig":"20"},{"size":355,"mtime":1668716118604,"results":"24","hashOfConfig":"20"},{"size":1062,"mtime":1668974194006,"results":"25","hashOfConfig":"20"},{"size":2492,"mtime":1668977027353,"results":"26","hashOfConfig":"20"},{"size":2265,"mtime":1668963300509,"results":"27","hashOfConfig":"20"},{"size":2087,"mtime":1668934021881,"results":"28","hashOfConfig":"20"},{"size":1849,"mtime":1668794186061,"results":"29","hashOfConfig":"20"},{"size":135,"mtime":1668626294706,"results":"30","hashOfConfig":"20"},{"size":1462,"mtime":1668978314807,"results":"31","hashOfConfig":"20"},{"size":2524,"mtime":1668795399445,"results":"32","hashOfConfig":"20"},{"size":4181,"mtime":1668978302408,"results":"33","hashOfConfig":"20"},{"size":2401,"mtime":1668975358309,"results":"34","hashOfConfig":"20"},{"size":935,"mtime":1668802425742,"results":"35","hashOfConfig":"20"},{"size":3212,"mtime":1668973353578,"results":"36","hashOfConfig":"20"},{"size":8615,"mtime":1668978318295,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"14ml5u0",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/workspace/dashboard/admin-dashboard/src/index.js",[],["81","82"],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/App.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/LoginPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectDetailsPage.js",["83"],"import React , {useContext, useEffect, useState} from 'react';\nimport AuthContext from '../context/AuthContext';\n\nconst ProjectDetailsPage = () => {\n  let {authTokens, logoutUser} = useContext(AuthContext)\n  let [projects, setProjects] = useState([])\n  useEffect(() => {\n    getProjects()\n  }, [])\n  \n  let getProjects = async () => {\n    let response = await fetch('/api/projects/', {\n      headers:{\n        'Content-Type':'application/json',\n        'Authorization':'Bearer '+ String(authTokens.access),\n    },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      setProjects(data.projects);\n      console.log(data.projects)\n    }else if(response.statusText === 'Unauthorized'){\n      logoutUser()\n  }\n    else{\n      alert('Something went wrong!');\n    }\n  }\n  return (\n    <div>\n        <div className=\"fw-bold\" style={{fontSize: \"1.525em\"}}>\n            <sapn><i className=\"bi bi-house-door-fill\"></i></sapn>\n            <span className=\"d-inline-block\"><h4> Project Details</h4></span>\n        </div>\n        <div className=\"row total-row\">\n        <table className=\"table bg-white rounded mt-2 p-4\">\n        <tbody>\n          {projects.map((project, index) => {\n             return (\n              <tr key={index} className=\"mb-2\">\n                <th scope=\"row\">{index+1}</th>\n                <td>{project.project_id}</td>\n                <td>{project.project_title}</td>\n                <td>{project.date_from}</td>\n                <td>{project.date_to}</td>\n              </tr>\n             )\n          })}\n          </tbody>\n          </table>\n        </div>\n    </div>\n  )\n}\n\nexport default ProjectDetailsPage","/home/ubuntu/workspace/dashboard/admin-dashboard/src/utils/PrivateRoute.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/HomePage.js",["84"],"import React, {useState, useEffect, useContext} from 'react';\nimport AuthContext from '../context/AuthContext';\n\n\nconst HomePage = () => {\n    let [notes, setNotes] = useState([])\n    let {authTokens, logoutUser} = useContext(AuthContext)\n\n    useEffect(()=> {\n        getNotes()\n    }, [])\n\n\n    let getNotes = async() =>{\n        let response = await fetch('/api/notes/', {\n            method:'GET',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + String(authTokens.access)\n            }\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setNotes(data)\n        }else if(response.statusText === 'Unauthorized'){\n            logoutUser()\n        }\n        \n    }\n\n    return (\n        <div>\n            <p>You are logged to the home page!</p>\n\n\n            <ul>\n                {notes.map(note => (\n                    <li key={note.id} >{note.body}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default HomePage\n","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/DashboardPage.js",["85"],"import React, {useState, useContext, useEffect} from 'react';\n\nimport ProjectForm from '../components/ProjectForm';\nimport DashboardGraph from '../components/DashboardGraph';\nimport AuthContext from '../context/AuthContext';\n\n\nconst DashboardPage = () => {\n  let {authTokens, logoutUser} = useContext(AuthContext)\n  let [dashboard, setDasboard] = useState([])\n  useEffect(() => {\n    getDasboard()\n  }, [])\n  \n  let getDasboard = async () => {\n    let response = await fetch('/api/dashboard/', {\n      headers:{\n        'Content-Type':'application/json',\n        'Authorization':'Bearer '+ String(authTokens.access),\n    },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      setDasboard(data);\n    }else if(response.statusText === 'Unauthorized'){\n      logoutUser()\n  }\n    else{\n      alert('Something went wrong!');\n    }\n  }\n  return (\n    <div>\n      <div className=\"fw-bold\" style={{fontSize: \"1.525em\"}}>\n        <sapn><i className=\"bi bi-house-door-fill\"></i></sapn>\n        <span className=\"d-inline-block\"><h4> Dashboard</h4></span>\n      </div>\n      <div className=\"d-flex p-3 rounded total-row\">\n        <ProjectForm/>\n      </div>\n            <div className='row p-2'>\n              <div className=\"col m-2 p-3 bg-white rounded\">Total Clients\n                <h3 className=\"d-block justify-content-between\">{dashboard.client_count}</h3>\n              </div>\n              <div className=\"col m-2 p-3 bg-white rounded\">\n                <div className='row'>\n                  <div className='col-9'>\n                    Total Projects Completed\n                    <div class=\"progress my-3\">\n                      <div className=\"progress-bar\" role=\"progressbar\" style={{ width:dashboard.project_progress+'%' }} aria-valuenow={dashboard.completed_projects_count} aria-valuemin=\"0\" aria-valuemax={dashboard.ongoing_projects_count+dashboard.pending_projects_count}></div>\n                    </div>\n                  </div>\n                  <div className='col text-center'>\n                    <h3 className=\"d-block justify-content-between\">{dashboard.completed_projects_count}</h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col m-2 p-3 bg-white rounded\">Project Category\n                <span className=\"d-block justify-content-between\"></span>\n              </div>\n            </div>\n            <DashboardGraph/>\n      <div>\n      </div>\n     </div>\n  )\n}\n\nexport default DashboardPage","/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ProjectPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ClientDetailsPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/RegisterPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/NewProjectPage.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/pages/ManagerClientPage.js",["86","87"],"import React, {useState, useContext, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../context/AuthContext';\n\nconst ManagerClientPage = () => {\n  let {authTokens, logoutUser} = useContext(AuthContext)\n  let [clients, setclients] = useState([])\n  useEffect(() => {\n    getClients()\n  }, [])\n  \n  let getClients = async () => {\n    let response = await fetch('/api/clients/', {\n      headers:{\n        'Content-Type':'application/json',\n        'Authorization':'Bearer '+ String(authTokens.access),\n    },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      setclients(data.clients);\n      console.log(data.clients)\n    }else if(response.statusText === 'Unauthorized'){\n      logoutUser()\n  }\n    else{\n      alert('Something went wrong!');\n    }\n  }\n  return (\n    <div>\n      <div className='row'>Clients ({clients.length})</div>\n      <table className=\"table bg-white rounded mt-2 p-4\">\n        <tbody>\n          {clients.map((client, index) => {\n             return (\n              <tr key={index} className=\"mb-2\">\n                <th scope=\"row\">{index+1}</th>\n                <td>{client.client_name}</td>\n                <td>{client.client_company}</td>\n                <td>{client.client_phone}</td>\n                <td>{client.client_email}</td>\n              </tr>\n             )\n          })}\n          </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default ManagerClientPage","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/Sidebar.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/AuthContext.js",["88"],"import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom'\n\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({children}) => {\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    let [loading, setLoading] = useState(true)\n\n    const history = useHistory()\n\n    let RegisterUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`/api/register/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'email':e.target.email.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            // setAuthTokens(data)\n            // setUser(jwt_decode(data.access))\n            // localStorage.setItem('authTokens', JSON.stringify(data))\n            alert(data.message)\n            history.push('/')\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n    let loginUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`/api/token/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/')\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n    let addClient = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`/api/create-client/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'client_name':e.target.client_name.value, 'client_company':e.target.client_company.value, 'client_phone':e.target.client_phone.value, 'client_email':e.target.client_email.value})\n        })\n        let data = await response.json()\n    \n        if(response.status === 200){\n            alert(data.message)\n        }else{\n            alert('Something went wrong!')\n        }\n    }\n\n\n    let logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\n\n    let updateToken = async ()=> {\n\n        let response = await fetch(`/api/token/refresh/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'refresh':authTokens?.refresh})\n        })\n\n        let data = await response.json()\n        \n        if (response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else{\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        RegisterUser:RegisterUser,\n        logoutUser:logoutUser,\n        addClient:addClient\n    }\n\n\n    useEffect(()=> {\n\n        if(loading){\n            updateToken()\n        }\n\n        let fourMinutes = 1000 * 60 * 4\n\n        let interval =  setInterval(()=> {\n            if(authTokens){\n                updateToken()\n            }\n        }, fourMinutes)\n        return ()=> clearInterval(interval)\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n","/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/DashboardGraph.js",["89"],"import React, { useEffect, useContext, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Cell } from 'recharts';\nimport AuthContext from '../context/AuthContext';\n\n\nconst data = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst DashboardGraph = () =>{\n  let {authTokens, logoutUser} = useContext(AuthContext)\n  let [projectcount, setProjectcount] = useState([]);\n  useEffect(() => {\n    getGraphdata();\n  }, [])\n  let getGraphdata = async () => {\n    let response = await fetch('/api/counts/', {\n      headers:{\n        'Content-Type':'application/json',\n        'Authorization':'Bearer '+ String(authTokens.access),\n    },\n    })\n    let data = await response.json()\n    if(response.status === 200){\n      setProjectcount(\n        [\n          { name: 'Completed', value: data.completed_projects_count },\n          { name: 'On Process', value: data.ongoing_projects_count },\n          { name: 'Pending', value: data.pending_projects_count },\n        ]\n      )\n      console.log(data)\n    }else if(response.statusText === 'Unauthorized'){\n      logoutUser()\n  }\n    else{\n      alert('Something went wrong!');\n    }\n  }\n  return (<div className='row'>\n    <div className=\"col-4 m-3 p-2 bg-white rounded\">\n      <span>Projects</span>\n      <PieChart width={200} height={200}>\n        <Pie\n          data={projectcount}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n    </PieChart>\n  </div>\n  </div>)\n}\nexport default DashboardGraph","/home/ubuntu/workspace/dashboard/admin-dashboard/src/context/DashboardContext.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/AddClient.js",[],"/home/ubuntu/workspace/dashboard/admin-dashboard/src/components/ProjectForm.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":6,"nodeType":"96","endLine":9,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":11,"column":8,"nodeType":"96","endLine":11,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":13,"column":6,"nodeType":"96","endLine":13,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"106","line":10,"column":6,"nodeType":"96","endLine":10,"endColumn":8,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":138,"column":8,"nodeType":"96","endLine":138,"endColumn":29,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":33,"column":6,"nodeType":"96","endLine":33,"endColumn":8,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'getDasboard'. Either include it or remove the dependency array.",["116"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getClients'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'getGraphdata'. Either include it or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [getProjects]",{"range":"132","text":"133"},"Update the dependencies array to be: [getNotes]",{"range":"134","text":"135"},"Update the dependencies array to be: [getDasboard]",{"range":"136","text":"137"},"Update the dependencies array to be: [getClients]",{"range":"138","text":"139"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"140","text":"141"},"Update the dependencies array to be: [getGraphdata]",{"range":"142","text":"143"},[294,296],"[getProjects]",[287,289],"[getNotes]",[403,405],"[getDasboard]",[330,332],"[getClients]",[4013,4034],"[authTokens, loading, updateToken]",[1063,1065],"[getGraphdata]"]